@startuml
' https://www.codeproject.com/Articles/1278703/UML-Made-Easy-with-PlantUML-VS-Code
' java -jar ~/.vscode/extensions/jebbs.plantuml-2.13.14/plantuml.jar -verbose *.plantuml ../out/index.plantuml
' https://plantuml.com/es/component-diagram
' https://plantuml.com/es/ie-diagram



' skinparam Style strictuml
skinparam SequenceMessageAlignment center
skinparam backgroundColor #FFFFFF
skinparam roundcorner 5
skinparam wrapWidth 400
skinparam wrapMessageWidth 400

package "Jesuserro.com" #DDDDDD 
{
    node "PODS" as PODS {

        enum idioma {
            ES
            EN
        }

        map formato {
            1 => Kindle
            2 => E-book
            3 => Paperback
            4 => Hardback
            5 => Audiobook
        }
        map estado {
            0 => Por leer
            1 => Siguiente
            2 => Leido
            3 => Leyendo
            4 => Cerrado
            5 => Pausado
            6 => No interesado
            7 => Cuarentena
        }

        class Libro {
            - _source: Wp_Post
            - id: integer
            - titulo: string
            - portada
            - isbn:string
            - asin:string
            - autores
            - editorial
            - fecha_publicacion: date
            - formato: map
            - formatos: map
            - sinopsis: string
            - paginas: number
            - idioma: enum
            - generos_literarios
            - estado: map
            - descripcion: string
            - contenido: string
            - notas: map
            - reviews: map
            - favorito: boolean
            - goodreads_url: string
            - recomendaciones: map
            ==
            + get_titulo() 
            + get_reviews()
            + <b>get_rating()</b> 
        }
        
        class Review {
            - <b>titulo</b>
            - <strike>entradilla</strike> <b>descripcion</b>
            - <strike>texto</strike> <b>contenido</b>
            - <b>fecha</b>
            + libro
            - <strike>puntuacion</strike> <b>rating</b>
            + goodreads_url
        }

        class Nota {
            - <b>titulo</b>
            + fecha
            + libro
        }

        class Recomendacion {
            - <b>titulo</b>
            + pregunta
            + autor_pregunta
            + respuesta
            + url
            + libros
        }

        class Autor{
            - <b>titulo</b>
            + nombre
            + apellidos
            + portada
            + libros
            + entradilla
            + descripcion
            + bio
            + url
            + goodreads_url
        }

        class Editorial{
            - <b>titulo</b>
            + url
            + libros
        }

        class Foto{
            - titulo
            - foto
            - <strike>fecha_foto</strike> <b>fecha_captura</b>
            - descripcion
            - <b>contenido</b>
            + instagram_url
            + googlemaps_url
            + gps
        }
    }

    note top of Libro 
        There are two types of 
        Libro: WP_POST and AAWP
    end note
    Libro ||-o{ Review
    Libro ||-o{ Nota
    Libro ||-o{ Recomendacion
    Libro ||--down|{ Autor
    Libro ||--down|| Editorial
    Libro::estado --left|| estado : map
    Libro::formato --left|| formato : map
    Libro::idioma --left|| idioma : enum

    PODS -[hidden] Api_node2

    node "API2" as Api_node2 {
        frame Wordpress {
            class Wp_Post <<Wp_Post>>{
                - post_id: integer
                - post_title: string
                - post_date: Date
                - content: string
                + get_the_id()
                + get_the_title()
                + get_the_date()
                + get_the_content()
            }
        }

        frame Amazon {
            class AAWP_Template_Handler <<AAWP_Template_Handler>>{
                - asin
                ==
                + get_product_id()
                + get_template_variable(name, bool)
                + get_template_variables()
                + get_product_title()
                + get_product_url()
                + get_product_rating()
                + get_product_reviews()
            }
        }
    }  

    Libro::_source "1" *--|| "1" Wp_Post: contains
    Libro "1" o--|| "*" AAWP_Template_Handler: contains  

    node "API" as Api_node {
        frame Goodreads {
            note top of Jei_Api_Goodreads 
                GOODREADS = GR
                goodreads.com/user_status/show/GR_USER_ID?format=xml&key=GR_KEY
                goodreads.com/review/show/2312483779
            end note
            class Jei_Api_Goodreads {
                + getAuthor(GR_AUTHOR_ID: integer)
                + getBook(GR_BOOK_ID: integer)
                + getLatestReads(GR_USER_ID: integer)
                + getUser(GR_USER_ID: integer)
                + getUserStatus(GR_USER_ID: integer)
                + getUserStatuses(GR_USER_ID: integer)
                + getReview(review_id: integer)
            }
        }
    }

    


}
@enduml